<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ESP32S3-输入设备Keypad</title>
    <url>/posts/c4d6bdd0/</url>
    <content><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a><font style="color: #6e9afc">说明</font></h1><blockquote>
<p>硬件：ESP32S3N16R8开发板 + 2.8寸TFT显示屏(ST7789) + 拨轮<br>软件：<font style="color: #36b0f3">Visual Studio Code</font> + <font style="color: #e57200">PlatformIO</font> + Squareline Studio<br>代码：<a href="https://pan.baidu.com/s/1xKbrW781ydQgRGv5lPvfVA?pwd=levi">百度网盘：ESP32S3_KEYPAD(提取码：levi)</a> </p>
</blockquote>
<h1 id="UI界面"><a href="#UI界面" class="headerlink" title="UI界面"></a>UI界面</h1><p>使用<code>Squareline Studio</code>设计如下简单界面</p>
<p><img src="/posts/c4d6bdd0/sq.png" alt="SQ工程"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/sq.png) -->
<p>设置工程导出路径，然后导出文件</p>
<p><img src="/posts/c4d6bdd0/setting.png" alt="工程设置"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/setting.png) -->
<p>导出文件结构如下</p>
<p><img src="/posts/c4d6bdd0/export.png" alt="导出"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/export.png) -->
<h1 id="PlatforIO工程"><a href="#PlatforIO工程" class="headerlink" title="PlatforIO工程"></a>PlatforIO工程</h1><h2 id="复制工程"><a href="#复制工程" class="headerlink" title="复制工程"></a>复制工程</h2><p>复制前面写好的触摸屏工程</p>
<p>删除原工程中的UI文件，将新UI复制过来</p>
<p><img src="/posts/c4d6bdd0/copy.png" alt="创建工程"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/copy.png) -->
<h2 id="优化结构"><a href="#优化结构" class="headerlink" title="优化结构"></a>优化结构</h2><p><code>VS Code</code>打开工程</p>
<p>为了让<code>main.cpp</code>更简洁，这里将屏幕初始化的内容写到单独的<code>screen.cpp</code>文件中，然后在<code>main.cpp</code>中引入<code>screen.h</code>头文件</p>
<p>修改后<code>screen.h</code>文件内容如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _SCREEN_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _SCREEN_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bb_captouch.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TFT_eSPI.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="comment">// UI</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;./lvgl_gui/ui.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">touch_init</span><span class="params">(<span class="type">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">my_disp_flush</span><span class="params">( <span class="type">lv_disp_drv_t</span> *disp, <span class="type">const</span> <span class="type">lv_area_t</span> *area, <span class="type">lv_color_t</span> *color_p )</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">my_touchpad_read</span><span class="params">( <span class="type">lv_indev_drv_t</span> * indev_driver, <span class="type">lv_indev_data_t</span> * data )</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">screen_init</span><span class="params">(<span class="type">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p><code>screen.cpp</code>内容如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;screen.h&quot;</span></span></span><br><span class="line"><span class="comment">// GT911引脚</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_SDA  18</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_SCL  8</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_INT 45</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_RST 21</span></span><br><span class="line">BBCapTouch bbct;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *szNames[] = &#123;<span class="string">&quot;Unknown&quot;</span>, <span class="string">&quot;FT6x36&quot;</span>, <span class="string">&quot;GT911&quot;</span>, <span class="string">&quot;CST820&quot;</span>&#125;;</span><br><span class="line"><span class="comment">// 屏幕大小</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint16_t</span> screenWidth  = <span class="number">320</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint16_t</span> screenHeight = <span class="number">240</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">lv_disp_draw_buf_t</span> draw_buf;</span><br><span class="line"><span class="type">static</span> <span class="type">lv_color_t</span> buf[ screenWidth * <span class="number">10</span> ];</span><br><span class="line">TFT_eSPI tft = <span class="built_in">TFT_eSPI</span>(screenWidth, screenHeight); </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 触摸初始化</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">touch_init</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    bbct.<span class="built_in">init</span>(TOUCH_SDA, TOUCH_SCL, TOUCH_RST, TOUCH_INT);  <span class="comment">// 触摸初始化</span></span><br><span class="line">    <span class="type">int</span> iType = bbct.<span class="built_in">sensorType</span>();  <span class="comment">// 触摸芯片</span></span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;Sensor type = %s\n&quot;</span>, szNames[iType]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 触摸读取</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">my_touchpad_read</span><span class="params">( <span class="type">lv_indev_drv_t</span> * indev_driver, <span class="type">lv_indev_data_t</span> * data )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TOUCHINFO ti;</span><br><span class="line">    <span class="keyword">if</span>(bbct.<span class="built_in">getSamples</span>(&amp;ti))</span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line">        <span class="comment">/*Set the coordinates*/</span></span><br><span class="line">        data-&gt;point.x = ti.y[<span class="number">0</span>];</span><br><span class="line">        data-&gt;point.y = screenHeight - ti.x[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 显示刷新</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">my_disp_flush</span><span class="params">( <span class="type">lv_disp_drv_t</span> *disp, <span class="type">const</span> <span class="type">lv_area_t</span> *area, <span class="type">lv_color_t</span> *color_p )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">uint32_t</span> w = ( area-&gt;x2 - area-&gt;x1 + <span class="number">1</span> );</span><br><span class="line">    <span class="type">uint32_t</span> h = ( area-&gt;y2 - area-&gt;y1 + <span class="number">1</span> );</span><br><span class="line">    tft.<span class="built_in">startWrite</span>();</span><br><span class="line">    tft.<span class="built_in">setAddrWindow</span>( area-&gt;x1, area-&gt;y1, w, h );</span><br><span class="line">    tft.<span class="built_in">pushColors</span>( ( <span class="type">uint16_t</span> * )&amp;color_p-&gt;full, w * h, <span class="literal">true</span> );</span><br><span class="line">    tft.<span class="built_in">endWrite</span>();</span><br><span class="line">    <span class="built_in">lv_disp_flush_ready</span>( disp );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief 屏幕初始化</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">screen_init</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tft.<span class="built_in">begin</span>();    <span class="comment">// tft初始化</span></span><br><span class="line">    tft.<span class="built_in">setRotation</span>( <span class="number">1</span> );   <span class="comment">// 屏幕方向</span></span><br><span class="line">    tft.<span class="built_in">fillScreen</span>(TFT_BLACK);</span><br><span class="line">    <span class="built_in">lv_disp_draw_buf_init</span>( &amp;draw_buf, buf, <span class="literal">NULL</span>, screenWidth * <span class="number">10</span> );</span><br><span class="line">    <span class="comment">/*初始化显示*/</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_disp_drv_t</span> disp_drv;</span><br><span class="line">    <span class="built_in">lv_disp_drv_init</span>( &amp;disp_drv );</span><br><span class="line">    <span class="comment">/*Change the following line to your display resolution*/</span></span><br><span class="line">    disp_drv.hor_res = screenWidth;</span><br><span class="line">    disp_drv.ver_res = screenHeight;</span><br><span class="line">    disp_drv.flush_cb = my_disp_flush;</span><br><span class="line">    disp_drv.draw_buf = &amp;draw_buf;</span><br><span class="line">    <span class="built_in">lv_disp_drv_register</span>( &amp;disp_drv );</span><br><span class="line">    <span class="comment">/*Initialize the (dummy) input device driver*/</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_indev_drv_t</span> indev_drv;</span><br><span class="line">    <span class="built_in">lv_indev_drv_init</span>( &amp;indev_drv );</span><br><span class="line">    indev_drv.type = LV_INDEV_TYPE_POINTER;</span><br><span class="line">    indev_drv.read_cb = my_touchpad_read;</span><br><span class="line">    <span class="built_in">lv_indev_drv_register</span>( &amp;indev_drv );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="输入设备"><a href="#输入设备" class="headerlink" title="输入设备"></a>输入设备</h2><p><a href="https://lvgl.100ask.net/8.2/overview/indev.html">百问网：Input devices（输入设备）</a></p>
<p>打开如下目录文件</p>
<p><img src="/posts/c4d6bdd0/port.png" alt="port indev"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/port.png) -->
<p>打开<code>lv_port_indev_template.c</code>文件后，可以看到一共有五种输入方式</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">lv_indev_t</span> * indev_touchpad;</span><br><span class="line"><span class="type">lv_indev_t</span> * indev_mouse;</span><br><span class="line"><span class="type">lv_indev_t</span> * indev_keypad;</span><br><span class="line"><span class="type">lv_indev_t</span> * indev_encoder;</span><br><span class="line"><span class="type">lv_indev_t</span> * indev_button;</span><br></pre></td></tr></table></figure>

<p>分别是触摸，鼠标，键盘，编码器，按键，具体内容请查看上方<font color="#32a929">百问网lvgl中文文档</font>链接</p>
<blockquote>
<p>本次使用的是<code>keypad</code>来控制屏幕上的控件</p>
</blockquote>
<h2 id="Keypad设置"><a href="#Keypad设置" class="headerlink" title="Keypad设置"></a>Keypad设置</h2><p>在<code>lv_port_indev_template.c</code>中关于<code>keypad</code>一共有这几个函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">keypad_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">keypad_read</span><span class="params">(<span class="type">lv_indev_drv_t</span> * indev_drv, <span class="type">lv_indev_data_t</span> * data)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> <span class="title function_">keypad_get_key</span><span class="params">(<span class="type">void</span>)</span>;</span><br></pre></td></tr></table></figure>

<p>分别是键盘初始化，键盘回调，键值获取</p>
<h3 id="screen-h"><a href="#screen-h" class="headerlink" title="screen.h"></a>screen.h</h3><p>把<code>lv_port_indev_template.c</code>中这三个函数声明复制到<code>screen.h</code>中，修改如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _SCREEN_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _SCREEN_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TFT_eSPI.h&gt;</span> </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="comment">// UI</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;./lvgl_gui/ui.h&quot;</span></span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">lv_indev_t</span> * indev_keypad1;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">lv_group_t</span> * group1;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">my_disp_flush</span><span class="params">( <span class="type">lv_disp_drv_t</span> *disp, <span class="type">const</span> <span class="type">lv_area_t</span> *area, <span class="type">lv_color_t</span> *color_p )</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">screen_init</span><span class="params">(<span class="type">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">keypad_init</span><span class="params">(<span class="type">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">keypad_read</span><span class="params">(<span class="type">lv_indev_drv_t</span> * indev_drv, <span class="type">lv_indev_data_t</span> * data)</span></span>;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">uint32_t</span> <span class="title">keypad_get_key</span><span class="params">(<span class="type">void</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<h3 id="screen-cpp"><a href="#screen-cpp" class="headerlink" title="screen.cpp"></a>screen.cpp</h3><p>把<code>lv_port_indev_template.c</code>中三个函数的定义复制到<code>screen.cpp</code>中</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*------------------</span></span><br><span class="line"><span class="comment"> * Keypad</span></span><br><span class="line"><span class="comment"> * -----------------*/</span></span><br><span class="line"><span class="comment">/*Initialize your keypad*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">keypad_init</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*Your code comes here*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Will be called by the library to read the mouse*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">keypad_read</span><span class="params">(<span class="type">lv_indev_drv_t</span> * indev_drv, <span class="type">lv_indev_data_t</span> * data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">uint32_t</span> last_key = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/*Get the current x and y coordinates*/</span></span><br><span class="line">    <span class="built_in">mouse_get_xy</span>(&amp;data-&gt;point.x, &amp;data-&gt;point.y);</span><br><span class="line">    <span class="comment">/*Get whether the a key is pressed and save the pressed key*/</span></span><br><span class="line">    <span class="type">uint32_t</span> act_key = <span class="built_in">keypad_get_key</span>();</span><br><span class="line">    <span class="keyword">if</span>(act_key != <span class="number">0</span>) &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line">        <span class="comment">/*Translate the keys to LVGL control characters according to your key definitions*/</span></span><br><span class="line">        <span class="keyword">switch</span>(act_key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                act_key = LV_KEY_NEXT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                act_key = LV_KEY_PREV;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                act_key = LV_KEY_LEFT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                act_key = LV_KEY_RIGHT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                act_key = LV_KEY_ENTER;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        last_key = act_key;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line">    data-&gt;key = last_key;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Get the currently being pressed key.  0 if no key is pressed*/</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">uint32_t</span> <span class="title">keypad_get_key</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*Your code comes here*/</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在我自制的ESP32S3N16R8开发板中使用的是如下图所示的<a href="https://item.szlcsc.com/300043.html">多功能开关</a></p>
<p><img src="/posts/c4d6bdd0/key.png" alt="多功能开关"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/key.png) -->
<p>原理图如下，三个按键被下拉，IO为低电平，当按键按下时IO将检测到高电平</p>
<p><img src="/posts/c4d6bdd0/keyd.png" alt="原理图"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/keyd.png) -->
<p>在<code>screen.cpp</code>中最开始定义如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">lv_indev_drv_t</span> indev_drv;</span><br><span class="line"><span class="type">lv_indev_t</span> * indev_keypad1;</span><br><span class="line"><span class="type">lv_group_t</span> * group1;</span><br><span class="line"><span class="comment">// 按键引脚</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> btn1 5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> btn2 6</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> btn3 7</span></span><br></pre></td></tr></table></figure>

<p><code>keypad_init</code>内容如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">keypad_init</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*Your code comes here*/</span></span><br><span class="line">    <span class="built_in">pinMode</span>(btn1, INPUT); <span class="comment">//左</span></span><br><span class="line">    <span class="built_in">pinMode</span>(btn2, INPUT); <span class="comment">//确定</span></span><br><span class="line">    <span class="built_in">pinMode</span>(btn3, INPUT); <span class="comment">//右</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>keypad_read</code>内容如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">keypad_read</span><span class="params">(<span class="type">lv_indev_drv_t</span> * indev_drv, <span class="type">lv_indev_data_t</span> * data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">uint32_t</span> last_key = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/*Get whether the a key is pressed and save the pressed key*/</span></span><br><span class="line">    <span class="type">uint32_t</span> act_key = <span class="built_in">keypad_get_key</span>();</span><br><span class="line">    <span class="keyword">if</span>(act_key != <span class="number">0</span>) &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line">        <span class="comment">/*Translate the keys to LVGL control characters according to your key definitions*/</span></span><br><span class="line">        <span class="keyword">switch</span>(act_key) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                act_key = LV_KEY_NEXT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                act_key = LV_KEY_PREV;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                act_key = LV_KEY_LEFT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                act_key = LV_KEY_RIGHT;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                act_key = LV_KEY_ENTER;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        last_key = act_key;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line">    data-&gt;key = last_key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>keypad_get_key</code>内容如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">static</span> <span class="type">uint32_t</span> <span class="title">keypad_get_key</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*Your code comes here*/</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">digitalRead</span>(btn1) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">// 下一个</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">digitalRead</span>(btn2) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>; <span class="comment">// 上一个</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">digitalRead</span>(btn3) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">5</span>; <span class="comment">// 确定</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下一步修改<code>screen_init</code>内容如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">screen_init</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tft.<span class="built_in">begin</span>();    <span class="comment">// tft初始化</span></span><br><span class="line">    tft.<span class="built_in">setRotation</span>( <span class="number">1</span> );   <span class="comment">// 屏幕方向</span></span><br><span class="line">    <span class="built_in">lv_disp_draw_buf_init</span>( &amp;draw_buf, buf, <span class="literal">NULL</span>, screenWidth * <span class="number">10</span> );</span><br><span class="line">    <span class="comment">/*初始化显示*/</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_disp_drv_t</span> disp_drv;</span><br><span class="line">    <span class="built_in">lv_disp_drv_init</span>( &amp;disp_drv );</span><br><span class="line">    <span class="comment">/*Change the following line to your display resolution*/</span></span><br><span class="line">    disp_drv.hor_res = screenWidth;</span><br><span class="line">    disp_drv.ver_res = screenHeight;</span><br><span class="line">    disp_drv.flush_cb = my_disp_flush;</span><br><span class="line">    disp_drv.draw_buf = &amp;draw_buf;</span><br><span class="line">    <span class="built_in">lv_disp_drv_register</span>( &amp;disp_drv );</span><br><span class="line">    <span class="comment">/*Initialize your keypad or keyboard if you have*/</span></span><br><span class="line">    <span class="built_in">keypad_init</span>();</span><br><span class="line">    <span class="comment">/*Register a keypad input device*/</span></span><br><span class="line">    <span class="built_in">lv_indev_drv_init</span>(&amp;indev_drv);</span><br><span class="line">    indev_drv.type = LV_INDEV_TYPE_KEYPAD;</span><br><span class="line">    indev_drv.read_cb = keypad_read;</span><br><span class="line">    indev_keypad1 = <span class="built_in">lv_indev_drv_register</span>(&amp;indev_drv);</span><br><span class="line">    <span class="comment">/*Later you should create group(s) with `lv_group_t * group = lv_group_create()`,</span></span><br><span class="line"><span class="comment">     *add objects to the group with `lv_group_add_obj(group, obj)`</span></span><br><span class="line"><span class="comment">     *and assign this input device to group to navigate in it:</span></span><br><span class="line"><span class="comment">     *`lv_indev_set_group(indev_keypad1, group);`*/</span></span><br><span class="line">    group1 = <span class="built_in">lv_group_create</span>();</span><br><span class="line">    <span class="built_in">lv_indev_set_group</span>(indev_keypad1, group1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>主要修改如下</p>
<ul>
<li><p><code>indev_drv.type</code>输入设备类型改为<code>LV_INDEV_TYPE_KEYPAD</code></p>
</li>
<li><p><code>indev_drv.read_cb</code>回调函数改为<code>keypad_read</code></p>
</li>
<li><p><code>lv_indev_drv_register(&amp;indev_drv)</code>赋值给最开始定义的<code>indev_keypad1</code></p>
</li>
<li><p>创建组<code>group1 = lv_group_create()lv_group_create()</code></p>
</li>
<li><p>将组与输入设备关联<code>lv_indev_set_group(indev_keypad1, group1)</code></p>
</li>
</ul>
<h2 id="添加对象"><a href="#添加对象" class="headerlink" title="添加对象"></a>添加对象</h2><p>只有将控件对象添加到组中，才能通过<code>keypad</code>控制</p>
<p>打开如下目录界面文件<code>lvgl_gui/screens/ui_mainpage.c</code></p>
<p>可以看到在设计界面时一共添加了四个控件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">ui_Button2</span><br><span class="line">ui_Switch2</span><br><span class="line">ui_Switch1</span><br><span class="line">ui_Dropdown2</span><br></pre></td></tr></table></figure>

<p>在<code>#include &quot;../ui.h&quot;</code>下添加如下代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">lv_group_t</span> * group1;</span><br></pre></td></tr></table></figure>

<p>在<code>ui_mainpage_screen_init</code>函数中最后添加如下代码</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">lv_group_add_obj(group1, ui_Button2);</span><br><span class="line">lv_group_add_obj(group1, ui_Switch2);</span><br><span class="line">lv_group_add_obj(group1, ui_Switch1);</span><br><span class="line">lv_group_add_obj(group1, ui_Dropdown2);</span><br><span class="line">lv_group_focus_obj(ui_Button2);</span><br></pre></td></tr></table></figure>

<h2 id="main-cpp"><a href="#main-cpp" class="headerlink" title="main.cpp"></a>main.cpp</h2><p>因为前面优化了代码结构，这里还需要在<code>main.cpp</code>中引入<code>screen.h</code></p>
<p>修改代码如下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lvgl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;freertos/FreeRTOS.h&gt;</span></span></span><br><span class="line"><span class="comment">// SCREEN</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;./screen.h&quot;</span></span></span><br><span class="line"><span class="comment">// UI</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;./lvgl_gui/ui.h&quot;</span></span></span><br><span class="line"><span class="comment">// 任务</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">lvgl_task</span><span class="params">(<span class="type">void</span> *pt)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial.<span class="built_in">begin</span>( <span class="number">115200</span> ); <span class="comment">// 串口初始化</span></span><br><span class="line">    <span class="built_in">lv_init</span>();  <span class="comment">// lvgl初始化</span></span><br><span class="line">    <span class="built_in">screen_init</span>(); <span class="comment">// 屏幕初始化</span></span><br><span class="line">    <span class="built_in">ui_init</span>();  <span class="comment">// UI初始化</span></span><br><span class="line">    <span class="built_in">xTaskCreatePinnedToCore</span>(lvgl_task, <span class="string">&quot;lvgl display&quot;</span>, <span class="number">1024</span> * <span class="number">15</span>, <span class="literal">NULL</span>, <span class="number">2</span>, <span class="literal">NULL</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">lvgl_task</span><span class="params">(<span class="type">void</span> *pt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">lv_timer_handler</span>(); <span class="comment">/* let the GUI do its work */</span></span><br><span class="line">        <span class="built_in">vTaskDelay</span>(<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p>修改程序后，编译烧录</p>
<p><img src="/posts/c4d6bdd0/key1.png" alt="拨轮"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/key1.png) -->
<p><img src="/posts/c4d6bdd0/screen.png" alt="显示"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/screen.png) -->
<p><img src="/posts/c4d6bdd0/switch.gif" alt="切换"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/switch.gif) -->
<p><img src="/posts/c4d6bdd0/enter.gif" alt="选中"></p>
<!-- ![](https://gitee.com/levi-05/pic1/raw/master/esp32s3_keypad/enter.gif) -->
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><center> 2024 <font color="#00bcd9">Levi5</font></center>]]></content>
      <categories>
        <category>ESP32</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>PlatformIO</tag>
        <tag>lvgl</tag>
        <tag>2.8寸TFT</tag>
        <tag>Squareline Studio</tag>
        <tag>多功能开关</tag>
        <tag>自制</tag>
      </tags>
  </entry>
  <entry>
    <title>预告</title>
    <url>/posts/224bc55d/</url>
    <content><![CDATA[<p><img src="/posts/224bc55d/icon.png" alt="icon"><br>… … … … …</p>
]]></content>
      <categories>
        <category>ESP32</category>
        <category>预告</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>PlatformIO</tag>
        <tag>立创</tag>
        <tag>多功能开关</tag>
        <tag>自制</tag>
        <tag>1.8寸TFT</tag>
        <tag>预告</tag>
        <tag>3D</tag>
        <tag>传感器</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub Profile</title>
    <url>/posts/7f6b7f24/</url>
    <content><![CDATA[<h1 id="GitHub-主页指南"><a href="#GitHub-主页指南" class="headerlink" title="GitHub 主页指南"></a>GitHub 主页指南</h1><blockquote>
<p>user_name: GitHub用户名(levi52)</p>
</blockquote>
<h2 id="访问次数"><a href="#访问次数" class="headerlink" title="访问次数"></a>访问次数</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">Visitor Count</span>](<span class="link">https://profile-counter.glitch.me/user_name/count.svg</span>)</span><br></pre></td></tr></table></figure>

<h2 id="GitHub-Readme-Stats"><a href="#GitHub-Readme-Stats" class="headerlink" title="GitHub Readme Stats"></a>GitHub Readme Stats</h2><p><a href="https://github.com/anuraghazra/github-readme-stats">github-readme-stats: :zap: Dynamically generated stats for your github readmes</a></p>
<h3 id="常用语言"><a href="#常用语言" class="headerlink" title="常用语言"></a>常用语言</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">![Top Langs</span>](<span class="link">https://github-readme-stats.vercel.app/api/top-langs/?username=user_name</span>)](<span class="link">https://github.com/user_name/github-readme-stats</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">![Top Langs</span>](<span class="link">https://github-readme-stats.vercel.app/api/top-langs/?username=user_name&amp;layout=compact</span>)](<span class="link">https://github.com/user_name/github-readme-stats</span>)</span><br></pre></td></tr></table></figure>

<h3 id="仓库状态"><a href="#仓库状态" class="headerlink" title="仓库状态"></a>仓库状态</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">user_name&#x27;s GitHub stats</span>](<span class="link">https://github-readme-stats.vercel.app/api?username=user_name&amp;show_icons=true&amp;theme=tokyonight</span>)</span><br><span class="line">![<span class="string">GitHub followers</span>](<span class="link"></span>)</span><br></pre></td></tr></table></figure>

<h2 id="shield图标"><a href="#shield图标" class="headerlink" title="shield图标"></a>shield图标</h2><p><a href="https://shields.io/">Shields</a></p>
<p><a href="https://dev.to/envoy_/150-badges-for-github-pnk">📛 Awesome Badges</a></p>
<p><a href="https://badgen.net/">badgen</a></p>
<p><img src="/posts/7f6b7f24/levi52.svg" alt="GitHub followers"></p>
<p><img src="/posts/7f6b7f24/tool-pycharm-green.svg" alt="Static Badge"></p>
<p><img src="/posts/7f6b7f24/GitHub-100000.svg" alt="Github"></p>
<h3 id="静态"><a href="#静态" class="headerlink" title="静态"></a>静态</h3><p><a href="https://shields.io/badges/static-badge">Static Badge</a></p>
<ul>
<li><p><code>badgeContent</code> string – <font color="red">REQUIRED</font></p>
<p>标签, (可选) 信息, 颜色. <code>-</code>连接</p>
<p>示例：立创-EDA-#f7f7f7</p>
</li>
<li><p><code>style</code> string</p>
<p>可选参数：<code>flat</code>,<code>flat-square</code>,<code>plastic</code>,<code>for-the-badge</code>,<code>social</code></p>
<p>默认：<code>flat</code></p>
<p>示例：<code>flat</code></p>
</li>
<li><p><code>logo</code> string</p>
<p>可选logo：<a href="https://github.com/simple-icons/simple-icons/blob/master/slugs.md">simple-icons&#x2F;slugs.md</a></p>
<p>示例：easyeda</p>
</li>
<li><p><code>logoColor</code> string</p>
<p>logo颜色，支持hex, rgb, rgba, hsl, hsla and css</p>
<p>示例：ffffff</p>
</li>
<li><p><code>label</code>  string</p>
<p>左边文本</p>
<p>示例：立创</p>
</li>
<li><p><code>labelColor</code>  string</p>
<p>左边背景颜色，支持 hex, rgb, rgba, hsl, hsla and css</p>
<p>示例：5487ff</p>
</li>
<li><p><code>color</code>  string</p>
<p>右边背景颜色，支持hex, rgb, rgba, hsl, hsla and css</p>
<p>示例：f7f7f7</p>
</li>
<li><p><code>cacheSeconds</code>  string</p>
<p>HTTP缓存生存期(应用规则来推断每个徽章的默认值，低于默认值指定的任何值都将被忽略)。</p>
<p>示例: 3600</p>
</li>
<li><p><code>link</code>  string[]</p>
<p>指定单击徽章的左&#x2F;右链接。</p>
<p>示例：<a href="https://lceda.cn/">https://lceda.cn/</a></p>
</li>
</ul>
<blockquote>
<p>效果: <img src="/%E7%AB%8B%E5%88%9B-EDA-#f7f7f7style=flat&logo=easyeda&logoColor=ffffff&label=%E7%AB%8B%E5%88%9B&labelColor=5487ff&color=f7f7f7&cacheSeconds=3600&link=https://lceda.svg" alt="Static Badge"></p>
</blockquote>
<p><img src="/posts/7f6b7f24/image-20240202114236931.png" alt="image-20240202114236931"></p>
<h2 id="主页编辑器"><a href="#主页编辑器" class="headerlink" title="主页编辑器"></a>主页编辑器</h2><p><a href="https://profilinator.rishav.dev/">Github Profilinator - GitHub Profile README Generator </a></p>
<h2 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h2><h3 id="📱-Contact"><a href="#📱-Contact" class="headerlink" title="📱 Contact"></a>📱 Contact</h3><p><img src="https://img.shields.io/badge/Gmail-D14836?style=for-the-badge&logo=gmail&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Line-00C300?style=for-the-badge&logo=line&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Microsoft_Outlook-0078D4?style=for-the-badge&logo=microsoft-outlook&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&logo=telegram&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/WeChat-07C160?style=for-the-badge&logo=wechat&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/WhatsApp-25D366?style=for-the-badge&logo=whatsapp&logoColor=white"></p>
<h3 id="🤜🤛-Group"><a href="#🤜🤛-Group" class="headerlink" title="🤜🤛 Group"></a>🤜🤛 Group</h3><p><img src="https://img.shields.io/badge/Discord-7289DA?style=for-the-badge&logo=discord&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Microsoft_Teams-6264A7?style=for-the-badge&logo=microsoft-teams&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Zoom-2D8CFF?style=for-the-badge&logo=zoom&logoColor=white"></p>
<p><img src="https://aleen42.github.io/badges/src/reddit.svg"></p>
<h3 id="👨-Social"><a href="#👨-Social" class="headerlink" title="👨 Social"></a>👨 Social</h3><p><img src="https://img.shields.io/badge/Codepen-000000?style=for-the-badge&logo=codepen&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Element-0DBD8B?style=for-the-badge&logo=element&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Facebook-1877F2?style=for-the-badge&logo=facebook&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/GitHub-100000?style=for-the-badge&logo=github&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/GitLab-330F63?style=for-the-badge&logo=gitlab&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Instagram-E4405F?style=for-the-badge&logo=instagram&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/-LeetCode-FFA116?style=for-the-badge&logo=LeetCode&logoColor=black"></p>
<p><img src="https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Reddit-FF4500?style=for-the-badge&logo=reddit&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Snapchat-FFFC00?style=for-the-badge&logo=snapchat&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/TikTok-000000?style=for-the-badge&logo=tiktok&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Twitter-1DA1F2?style=for-the-badge&logo=twitter&logoColor=white"></p>
<h3 id="🛒-Store"><a href="#🛒-Store" class="headerlink" title="🛒 Store"></a>🛒 Store</h3><p><img src="https://img.shields.io/badge/App_Store-0D96F6?style=for-the-badge&logo=app-store&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Google_Play-414141?style=for-the-badge&logo=google-play&logoColor=white"></p>
<h3 id="💻-OS"><a href="#💻-OS" class="headerlink" title="💻 OS"></a>💻 OS</h3><p><img src="https://img.shields.io/badge/Android-3DDC84?style=for-the-badge&logo=android&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Cent%20OS-262577?style=for-the-badge&logo=CentOS&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Debian-A81D33?style=for-the-badge&logo=debian&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/iOS-000000?style=for-the-badge&logo=ios&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Linux-FCC624?style=for-the-badge&logo=linux&logoColor=black"></p>
<p><img src="https://img.shields.io/badge/mac%20os-000000?style=for-the-badge&logo=apple&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Red%20Hat-EE0000?style=for-the-badge&logo=redhat&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Ubuntu-E95420?style=for-the-badge&logo=ubuntu&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Windows-0078D6?style=for-the-badge&logo=windows&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Windows_95-008080?style=for-the-badge&logo=windows-95&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Windows_XP-003399?style=for-the-badge&logo=windows-xp&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/-%23ffffff?style=for-the-badge&logo=harmonyos&logoColor=ffffff&label=Harmony%20OS&labelColor=000000&color=ffffff&cacheSeconds=3600"></p>
<h3 id="📝-Blog"><a href="#📝-Blog" class="headerlink" title="📝 Blog"></a>📝 Blog</h3><p><img src="https://img.shields.io/badge/Wordpress-21759B?style=for-the-badge&logo=wordpress&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Blogger-FF5722?style=for-the-badge&logo=blogger&logoColor=white"></p>
<h3 id="🎞-Streaming"><a href="#🎞-Streaming" class="headerlink" title="🎞 Streaming"></a>🎞 Streaming</h3><p><img src="https://img.shields.io/badge/Netflix-E50914?style=for-the-badge&logo=netflix&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Twitch-9146FF?style=for-the-badge&logo=twitch&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/YouTube-FF0000?style=for-the-badge&logo=youtube&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/YouTube_Gaming-FF0000?style=for-the-badge&logo=youtube-gaming&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/-%23ffffff?style=for-the-badge&logo=bilibili&logoColor=ffffff&label=bilibili&labelColor=ff6a9b&color=ffffff&cacheSeconds=3600&link=https%3A%2F%2Fwww.bilibili.com%2F"></p>
<h3 id="❤-Funding"><a href="#❤-Funding" class="headerlink" title="❤ Funding"></a>❤ Funding</h3><p><img src="https://img.shields.io/badge/alipay-00A1E9?style=for-the-badge&logo=alipay&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/amazon%20pay-F79114?style=for-the-badge&logo=amazon%20pay&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/apple%20pay-007AFF?style=for-the-badge&logo=apple%20pay&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Buy_Me_A_Coffee-FFDD00?style=for-the-badge&logo=buy-me-a-coffee&logoColor=black"></p>
<p><img src="https://img.shields.io/badge/G%20pay-2875E3?style=for-the-badge&logo=googlepay&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/PayPal-00457C?style=for-the-badge&logo=paypal&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/samsung%20pay-1D49C0?style=for-the-badge&logo=samsung%20pay&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/sponsor-30363D?style=for-the-badge&logo=GitHub-Sponsors&logoColor=#white"></p>
<h3 id="🎶-Sound"><a href="#🎶-Sound" class="headerlink" title="🎶 Sound"></a>🎶 Sound</h3><p><img src="https://img.shields.io/badge/apple%20music-F34E68?style=for-the-badge&logo=apple%20music&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Apple_Podcasts-9933CC?style=for-the-badge&logo=apple-podcasts&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/iheart-A80025?style=for-the-badge&logo=iheartradio&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/SoundCloud-FF3300?style=for-the-badge&logo=soundcloud&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Spotify-1ED760?&style=for-the-badge&logo=spotify&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/YouTube_Music-FF0000?style=for-the-badge&logo=youtube-music&logoColor=white"></p>
<h3 id="🍔-Food"><a href="#🍔-Food" class="headerlink" title="🍔 Food"></a>🍔 Food</h3><p><img src="https://img.shields.io/badge/KFC-F40027?style=for-the-badge&logo=kfc&logoColor=white"></p>
<h3 id="☁-Cloud"><a href="#☁-Cloud" class="headerlink" title="☁ Cloud"></a>☁ Cloud</h3><p><img src="https://img.shields.io/badge/Alibaba_Cloud-FF6A00?style=for-the-badge&logo=alibabacloud&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Amazon_AWS-FF9900?style=for-the-badge&logo=amazonaws&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Azure_DevOps-0078D7?style=for-the-badge&logo=azure-devops&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Azure_Functions-0062AD?style=for-the-badge&logo=azure-functions&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Cloudflare-F38020?style=for-the-badge&logo=Cloudflare&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/GitHub_Actions-2088FF?style=for-the-badge&logo=github-actions&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Google_Cloud-4285F4?style=for-the-badge&logo=google-cloud&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/microsoft%20azure-0089D6?style=for-the-badge&logo=microsoft-azure&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Oracle-F80000?style=for-the-badge&logo=oracle&logoColor=black"></p>
<p><img src="https://img.shields.io/badge/Vercel-000000?style=for-the-badge&logo=vercel&logoColor=white"></p>
<h3 id="⚡-Database"><a href="#⚡-Database" class="headerlink" title="⚡ Database"></a>⚡ Database</h3><p><img src="https://img.shields.io/badge/MongoDB-4EA94B?style=for-the-badge&logo=mongodb&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/MySQL-005C84?style=for-the-badge&logo=mysql&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Oracle-F80000?style=for-the-badge&logo=Oracle&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/PostgreSQL-316192?style=for-the-badge&logo=postgresql&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/redis-%23DD0031.svg?&style=for-the-badge&logo=redis&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/SQLite-07405E?style=for-the-badge&logo=sqlite&logoColor=white"></p>
<h3 id="👩‍💻-IDE"><a href="#👩‍💻-IDE" class="headerlink" title="👩‍💻 IDE"></a>👩‍💻 IDE</h3><p><img src="https://img.shields.io/badge/NI_Multisim-white?style=flat&logo=multisim&logoColor=%237b75a7&labelColor=%23f7f7f7&color=%2321af90"></p>
<p><img src="https://img.shields.io/badge/Keil_uVision5-white?style=flat&logo=armkeil&logoColor=%23fcfefd&labelColor=%23357643"></p>
<p><img src="https://img.shields.io/badge/Keil-uVision5-white?style=flat&label=Keil&labelColor=%23357643&color=%23fcfefd"></p>
<p><img src="https://img.shields.io/badge/Android_Studio-3DDC84?style=for-the-badge&logo=android-studio&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Arduino_IDE-00979D?style=for-the-badge&logo=arduino&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/CLion-000000?style=for-the-badge&logo=clion&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Colab-F9AB00?style=for-the-badge&logo=googlecolab&color=525252"></p>
<p><img src="https://img.shields.io/badge/Eclipse-2C2255?style=for-the-badge&logo=eclipse&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Notepad++-90E59A.svg?style=for-the-badge&logo=notepad%2B%2B&logoColor=black"></p>
<p><img src="https://img.shields.io/badge/PyCharm-000000.svg?&style=for-the-badge&logo=PyCharm&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/sublime_text-%23575757.svg?&style=for-the-badge&logo=sublime-text&logoColor=important"></p>
<p><img src="https://img.shields.io/badge/VIM-%2311AB00.svg?&style=for-the-badge&logo=vim&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Visual_Studio-5C2D91?style=for-the-badge&logo=visual%20studio&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Visual_Studio_Code-0078D4?style=for-the-badge&logo=visual%20studio%20code&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/WebStorm-000000?style=for-the-badge&logo=WebStorm&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/espressif-E7352C?style=for-the-badge&logo=espressif&logoColor=white"></p>
<h3 id="💻-Terminal"><a href="#💻-Terminal" class="headerlink" title="💻 Terminal"></a>💻 Terminal</h3><p><img src="https://img.shields.io/badge/GIT-E44C30?style=for-the-badge&logo=git&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/powershell-5391FE?style=for-the-badge&logo=powershell&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/windows%20terminal-4D4D4D?style=for-the-badge&logo=windows%20terminal&logoColor=white"></p>
<h3 id="🌐-Web-Browsers"><a href="#🌐-Web-Browsers" class="headerlink" title="🌐 Web Browsers"></a>🌐 Web Browsers</h3><p><img src="https://img.shields.io/badge/Google_chrome-4285F4?style=for-the-badge&logo=Google-chrome&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Firefox_Browser-FF7139?style=for-the-badge&logo=Firefox-Browser&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Microsoft_Edge-0078D7?style=for-the-badge&logo=Microsoft-edge&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Safari-FF1B2D?style=for-the-badge&logo=Safari&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Tor_Browser-7D4698?style=for-the-badge&logo=Tor-Browser&logoColor=white"></p>
<h3 id="🎨🎨Designer"><a href="#🎨🎨Designer" class="headerlink" title="🎨🎨Designer"></a>🎨🎨Designer</h3><p><img src="https://aleen42.github.io/badges/src/photoshop.svg"></p>
<p><img src="https://aleen42.github.io/badges/src/illustrator.svg"></p>
<p><img src="https://aleen42.github.io/badges/src/after_effects.svg"></p>
<p><img src="https://aleen42.github.io/badges/src/premiere.svg"></p>
<h3 id="Made-with"><a href="#Made-with" class="headerlink" title="Made with"></a>Made with</h3><p><img src="http://ForTheBadge.com/images/badges/made-with-python.svg"></p>
<p><img src="https://img.shields.io/badge/Made%20with-Jupyter-orange?style=for-the-badge&logo=Jupyter"></p>
<p><img src="https://img.shields.io/badge/Made%20with-Go-1f425f.svg"></p>
<p><img src="https://img.shields.io/badge/Made%20with-Markdown-1f425f.svg"></p>
<p><img src="https://img.shields.io/badge/Made%20with-LaTeX-1f425f.svg"></p>
<p><img src="https://img.shields.io/badge/Made%20for-VSCode-1f425f.svg"></p>
<p><img src="http://ForTheBadge.com/images/badges/built-with-love.svg"></p>
<p><img src="http://ForTheBadge.com/images/badges/built-by-developers.svg"></p>
<h3 id="GitHub-Stats"><a href="#GitHub-Stats" class="headerlink" title="GitHub Stats"></a>GitHub Stats</h3><p><img src="https://img.shields.io/github/license/{username}/{repo-name}.svg"></p>
<p><img src="https://img.shields.io/github/realese/{username}/{repo-name}.svg"></p>
<p><img src="https://img.shields.io/github/commits-since/{username}/{repo-name}/{version}.svg"></p>
<p><img src="https://img.shields.io/github/downloads/{username}/{repo-name}/total.svg"></p>
<p><img src="https://img.shields.io/github/forks/{username}/{repo-name}.svg"></p>
<p><img src="https://img.shields.io/github/stars/{username}/{repo-name}.svg"></p>
<p><img src="https://img.shields.io/github/watchers/{username}/{repo-name}.svg"></p>
<p><img src="https://img.shields.io/github/followers/{username}.svg?style=social&label=Follow&maxAge=2592000"></p>
<p><img src="https://img.shields.io/github/issues/{username}/{repo-name}.svg"></p>
<p><img src="https://img.shields.io/github/issues-closed/{username}/{repo-name}.svg"></p>
<p><img src="https://img.shields.io/github/issues-pr/{username}/{repo-name}.svg"></p>
<p><img src="https://img.shields.io/github/issues-pr-closed/{username}/{repo-name}.svg"></p>
<p><img src="https://github-readme-stats.vercel.app/api?username={username}&theme=blue-green"></p>
<p><img src="https://github-readme-stats.vercel.app/api?username={username}&theme=blue-green"></p>
<p><img src="https://github-readme-stats.vercel.app/api/top-langs/?username={username}&theme=blue-green"></p>
<p><img src="https://starchart.cc/{username}/{repo}.svg"></p>
<p><img src></p>
<p><img src></p>
<h3 id="🚀-skill"><a href="#🚀-skill" class="headerlink" title="🚀 skill"></a>🚀 skill</h3><p><img src="https://img.shields.io/badge/C%23-239120?style=for-the-badge&logo=c-sharp&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/HTML-239120?style=for-the-badge&logo=html5&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/CSS-239120?&style=for-the-badge&logo=css3&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/.NET-5C2D91?style=for-the-badge&logo=.net&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black"></p>
<p><img src="https://img.shields.io/badge/Node.js-43853D?style=for-the-badge&logo=node.js&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/JavaScript-323330?style=for-the-badge&logo=javascript&logoColor=F7DF1E"></p>
<p><img src="https://img.shields.io/badge/TypeScript-007ACC?style=for-the-badge&logo=typescript&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/HTML5-E34F26?style=for-the-badge&logo=html5&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/CSS3-1572B6?style=for-the-badge&logo=css3&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Sass-CC6699?style=for-the-badge&logo=sass&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Python-14354C?style=for-the-badge&logo=python&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/C-00599C?style=for-the-badge&logo=c&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/C%2B%2B-00599C?style=for-the-badge&logo=c%2B%2B&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/C%23-239120?style=for-the-badge&logo=c-sharp&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=openjdk&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/PHP-777BB4?style=for-the-badge&logo=php&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/R-276DC3?style=for-the-badge&logo=r&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Kotlin-0095D5?&style=for-the-badge&logo=kotlin&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Go-00ADD8?style=for-the-badge&logo=go&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Rust-000000?style=for-the-badge&logo=rust&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Lua-2C2D72?style=for-the-badge&logo=lua&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Markdown-000000?style=for-the-badge&logo=markdown&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Express.js-404D59?style=for-the-badge"></p>
<p><img src="https://img.shields.io/badge/React-20232A?style=for-the-badge&logo=react&logoColor=61DAFB"></p>
<p><img src="https://img.shields.io/badge/React_Native-20232A?style=for-the-badge&logo=react&logoColor=61DAFB"></p>
<p><img src="https://img.shields.io/badge/Vue.js-35495E?style=for-the-badge&logo=vue.js&logoColor=4FC08D"></p>
<p><img src="https://img.shields.io/badge/Tailwind_CSS-38B2AC?style=for-the-badge&logo=tailwind-css&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Bootstrap-563D7C?style=for-the-badge&logo=bootstrap&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/jQuery-0769AD?style=for-the-badge&logo=jquery&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Django-092E20?style=for-the-badge&logo=django&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Flask-000000?style=for-the-badge&logo=flask&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Flutter-02569B?style=for-the-badge&logo=flutter&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/MySQL-00000F?style=for-the-badge&logo=mysql&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/PostgreSQL-316192?style=for-the-badge&logo=postgresql&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/MongoDB-4EA94B?style=for-the-badge&logo=mongodb&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/SQLite-07405E?style=for-the-badge&logo=sqlite&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Unity-100000?style=for-the-badge&logo=unity&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Amazon_AWS-232F3E?style=for-the-badge&logo=amazon-aws&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Google_Cloud-4285F4?style=for-the-badge&logo=google-cloud&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Microsoft_Azure-0089D6?style=for-the-badge&logo=microsoft-azure&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Microsoft_Excel-217346?style=for-the-badge&logo=microsoft-excel&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Microsoft_PowerPoint-B7472A?style=for-the-badge&logo=microsoft-powerpoint&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Microsoft_Office-D83B01?style=for-the-badge&logo=microsoft-office&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Microsoft_Word-2B579A?style=for-the-badge&logo=microsoft-word&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Microsoft-666666?style=for-the-badge&logo=microsoft&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Powershell-2CA5E0?style=for-the-badge&logo=powershell&logoColor=white"></p>
<h3 id="💻-Workspace-Specs"><a href="#💻-Workspace-Specs" class="headerlink" title="💻 Workspace Specs"></a>💻 Workspace Specs</h3><p><img src="https://img.shields.io/badge/NVIDIA-GTX1650-76B900?style=for-the-badge&logo=nvidia&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/AMD-Radeon_RX_5500-ED1C24?style=for-the-badge&logo=amd&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Intel-Core_i5_10th-0071C5?style=for-the-badge&logo=intel&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/AMD-Ryzen_7_3800X-ED1C24?style=for-the-badge&logo=amd&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Windows-ASUS_Zenbook_3-0078D6?style=for-the-badge&logo=windows&logoColor=white"></p>
<p><img src="https://img.shields.io/badge/Apple-MacBook_Pro_2012-999999?style=for-the-badge&logo=apple&logoColor=white"></p>
]]></content>
      <categories>
        <category>GitHub</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>icon</tag>
      </tags>
  </entry>
  <entry>
    <title>安信可Ai-M61-32S环境搭建 + 点灯</title>
    <url>/posts/17ee55dc/</url>
    <content><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><blockquote>
<p>硬件：安信可Ai-M61-32S开发板<br>软件：<font style="color: #36b0f3">Visual Studio Code</font><br>视频：<a href="https://www.bilibili.com/video/BV1Vi421k7Mu">bilibili: 【Ai-M61】安信可Ai-M61-32S环境搭建+祖传点灯</a> </p>
</blockquote>
<h1 id="一、软件安装"><a href="#一、软件安装" class="headerlink" title="一、软件安装"></a>一、软件安装</h1><p>👉<a href="https://bbs.ai-thinker.com/forum.php?mod=viewthread&tid=282&extra=page=2&_dsign=7fea3002"><strong><font color="#12507b">零基础搭建小安派Windows 开发环境</font></strong></a>👈</p>
<h1 id="二、克隆仓库"><a href="#二、克隆仓库" class="headerlink" title="二、克隆仓库"></a>二、克隆仓库</h1><p>在项目文件夹右键，选择<code>open git bash here</code>，输入如下指令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/Ai-Thinker-Open/AiPi-Open-Kits.git -b master</span><br></pre></td></tr></table></figure>
<p>开始从<code>gitee</code>克隆仓库</p>
<p><img src="/posts/17ee55dc/download.gif"></p>
<p>等待下载，完成如下图所示</p>
<p><img src="/posts/17ee55dc/downloaded.png"></p>
<h1 id="三、拉取M61的SDK子模块"><a href="#三、拉取M61的SDK子模块" class="headerlink" title="三、拉取M61的SDK子模块"></a>三、拉取M61的SDK子模块</h1><h2 id="1-修改文件"><a href="#1-修改文件" class="headerlink" title="1. 修改文件"></a>1. 修改文件</h2><p>由于<code>github</code>访问较慢，在拉取 SDK 之前，需要修改子模块仓库位置。</p>
<p>进入 <code>AiPi-Open-Kits</code> 中，用文本打开 <code>.gitmodules</code> 文件 <strong>url</strong> 参数中的 <code>github.com</code> 改成 <code>gitee.com</code>：</p>
<p><img src="/posts/17ee55dc/gitee.gif"></p>
<p><img src="/posts/17ee55dc/gitee.png"></p>
<h2 id="2-拉取文件"><a href="#2-拉取文件" class="headerlink" title="2. 拉取文件"></a>2. 拉取文件</h2><p>继续输入如下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd AiPi-Open-Kits/</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br></pre></td></tr></table></figure>

<p><img src="/posts/17ee55dc/submodule1.png"></p>
<h1 id="四、拉取-M61-SDK-中的子模块"><a href="#四、拉取-M61-SDK-中的子模块" class="headerlink" title="四、拉取 M61 SDK 中的子模块"></a>四、拉取 M61 SDK 中的子模块</h1><h2 id="1-拉取文件"><a href="#1-拉取文件" class="headerlink" title="1. 拉取文件"></a>1. 拉取文件</h2><p>继续输入如下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd aithinker_Ai-M6X_SDK/</span><br><span class="line">git submodule init</span><br><span class="line">git submodule update</span><br></pre></td></tr></table></figure>

<p><img src="/posts/17ee55dc/submodule2.png"></p>
<h2 id="2-克隆工具链"><a href="#2-克隆工具链" class="headerlink" title="2. 克隆工具链"></a>2. 克隆工具链</h2><p>完成后，输入如下指令，克隆适用 Windows 的编译工具链</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://gitee.com/bouffalolab/toolchain_gcc_t-head_windows.git -b master</span><br></pre></td></tr></table></figure>

<p><img src="/posts/17ee55dc/toolchain.png"></p>
<h1 id="五、环境变量设置"><a href="#五、环境变量设置" class="headerlink" title="五、环境变量设置"></a>五、环境变量设置</h1><h2 id="1-打开环境变量"><a href="#1-打开环境变量" class="headerlink" title="1. 打开环境变量"></a>1. 打开环境变量</h2><p>打开电脑高级系统设置，点击环境变量</p>
<p><img src="/posts/17ee55dc/env.png"></p>
<p>在弹出的窗口中选择系统变量里的<code>Path</code>，点击编辑</p>
<p><img src="/posts/17ee55dc/sysenv.png"></p>
<h2 id="2-添加环境变量"><a href="#2-添加环境变量" class="headerlink" title="2. 添加环境变量"></a>2. 添加环境变量</h2><p>选择新建，然后点击浏览，添加如下路径</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">aithinker_Ai-M6X_SDK\toolchain_gcc_t-head_windows\bin</span><br><span class="line">aithinker_Ai-M6X_SDK\tools\make</span><br><span class="line">aithinker_Ai-M6X_SDK\tools\ninja</span><br></pre></td></tr></table></figure>

<p><img src="/posts/17ee55dc/env1.png"></p>
<p>添加完成后，如下图</p>
<p><img src="/posts/17ee55dc/env2.png"></p>
<p>注意还需要把 <code>aithinker_Ai-M6X_SDK\tools\make</code> 路径上移到最高层</p>
<h2 id="3-验证"><a href="#3-验证" class="headerlink" title="3. 验证"></a>3. 验证</h2><p>验证配置是否成功</p>
<p>在桌面按住 <code>shift</code> 键点击 <code>鼠标右键</code> 选择<code>在此处打开PowersShell窗口</code></p>
<p><code>Windows PowerShell</code>窗口中，输入如下命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">make -v</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">riscv64-unknown-elf-gcc -v</span><br></pre></td></tr></table></figure>

<p>成功时，输出如下图</p>
<p><img src="/posts/17ee55dc/powershell.png"></p>
<h1 id="六、编译程序"><a href="#六、编译程序" class="headerlink" title="六、编译程序"></a>六、编译程序</h1><h2 id="1-打开源码"><a href="#1-打开源码" class="headerlink" title="1. 打开源码"></a>1. 打开源码</h2><p>使用<code>VS Code</code>打开前面克隆的源码</p>
<p><img src="/posts/17ee55dc/vscode1.png"></p>
<p>选择<code>AiPi-Eyes-DU</code>文件夹，右键选择<code>在集成终端中打开</code></p>
<p><img src="/posts/17ee55dc/vscode2.png"></p>
<h2 id="2-编译程序"><a href="#2-编译程序" class="headerlink" title="2. 编译程序"></a>2. 编译程序</h2><p>输入<code>make</code>命令</p>
<p><img src="/posts/17ee55dc/vscode3.png"></p>
<h2 id="3-处理报错"><a href="#3-处理报错" class="headerlink" title="3. 处理报错"></a>3. 处理报错</h2><p>编译报错</p>
<p><img src="/posts/17ee55dc/error1.png"></p>
<p>根据报错，打开如下文件</p>
<p><img src="/posts/17ee55dc/edit1.png"></p>
<p>注释掉如下两行代码，然后再次执行<code>make</code>指令</p>
<p><img src="/posts/17ee55dc/edit2.png"></p>
<p><img src="/posts/17ee55dc/edit2.png"></p>
<h1 id="七、烧录程序"><a href="#七、烧录程序" class="headerlink" title="七、烧录程序"></a>七、烧录程序</h1><h2 id="1-查看端口"><a href="#1-查看端口" class="headerlink" title="1. 查看端口"></a>1. 查看端口</h2><p>打开<code>设备管理器</code>，查看端口</p>
<p><img src="/posts/17ee55dc/serial.png"></p>
<h2 id="2-烧录"><a href="#2-烧录" class="headerlink" title="2. 烧录"></a>2. 烧录</h2><p>可以看到端口为<code>COM19</code>，回到编辑器，在终端输入如下指令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">make flash COMX=COM19</span><br></pre></td></tr></table></figure>

<p><img src="/posts/17ee55dc/success.png"></p>
<p>烧写开发板前，先按住烧录按键不松手再按一下复位按键，然后松手进入烧录模式</p>
<p><a href="https://docs.ai-thinker.com/_media/en/ai-m61-32s-kit_v1.1.0%E8%A7%84%E6%A0%BC%E4%B9%A620230324.pdf"><strong><font color="#12507b">ai-m61-32s-kit_v1.1.0规格书</font></strong></a></p>
<p><img src="/posts/17ee55dc/boot.png"></p>
<h1 id="八、效果演示"><a href="#八、效果演示" class="headerlink" title="八、效果演示"></a>八、效果演示</h1><p><img src="/posts/17ee55dc/led.gif"></p>
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><center> 2024 <font color="#00bcd9">Levi5</font></center>]]></content>
      <categories>
        <category>Ai-M61-32S</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Ai-M61-32S</tag>
        <tag>安信可</tag>
        <tag>环境搭建</tag>
        <tag>点灯</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP32S3N8R8 + Squareline_Studio设计移植</title>
    <url>/posts/b97be97c/</url>
    <content><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><blockquote>
<p>硬件：<a href="https://lckfb.com/">立创ESP32S3R8N8开发板</a> + 2.8寸TFT显示屏(ST7789) + 电容触摸(GT911)<br>软件：<font style="color: #36b0f3">Visual Studio Code</font> + <font style="color: #e57200">PlatformIO</font>+ <font style="color: #dc4040">Squareline Studio</font><br>代码：<a href="https://pan.baidu.com/s/1HlfkJY-gq79WkFS29hg6Wg?pwd=levi">百度网盘：ESP32S3_SQ(提取码：levi)</a><br>代码：<a href="https://pan.baidu.com/s/1nwjB5gQ_fUmbdlNZjtprzQ?pwd=levi">百度网盘：ESP32S3_SERVO(提取码：levi)</a><br>视频：<a href="https://www.bilibili.com/video/BV1CC411J72J">bilibili: 【ESP32】初试Squareline Studio设计 简单控制屏幕亮度</a><br>视频：<a href="https://www.bilibili.com/video/BV1kJ4m1P73e">bilibili: 【ESP32】Squareline Studio新增界面+移植过程 - 简单控制舵机</a><br>博客：<a href="https://blog.csdn.net/Levi_5/article/details/138243662">CSDN: 【ESP32】立创ESP32S3N8R8开发板+2.8寸TFT电容触摸屏+Squareline Studio+PlatformIO</a></p>
</blockquote>
<h1 id="Squareline-Studio"><a href="#Squareline-Studio" class="headerlink" title="Squareline Studio"></a>Squareline Studio</h1><h2 id="设计UI"><a href="#设计UI" class="headerlink" title="设计UI"></a>设计UI</h2><p><img src="/posts/b97be97c/Squareline.png" alt="image-"></p>
<h2 id="导出文件"><a href="#导出文件" class="headerlink" title="导出文件"></a>导出文件</h2><ul>
<li><p>工程设置<br>按如下所示设置工程，<code>Project Export Root</code>和<code>UI Files Export Path</code>路径可以选择为LVGL工程目录下新建的<code>export</code>文件夹<br><img src="/posts/b97be97c/project_setting.png"><br><img src="/posts/b97be97c/project_setting1.png"></p>
</li>
<li><p>Export<br><img src="/posts/b97be97c/export.png"></p>
</li>
</ul>
<h1 id="PlatformIO"><a href="#PlatformIO" class="headerlink" title="PlatformIO"></a>PlatformIO</h1><h2 id="文件结构"><a href="#文件结构" class="headerlink" title="文件结构"></a>文件结构</h2><ul>
<li><p>导出文件<br>以下为<font color="#dc4140">Squareline Studio</font>导出的文件<br><img src="/posts/b97be97c/file_folder.png" alt="image-"></p>
</li>
<li><p>移植文件<br>资源文件复制到<font color="#dc4140">src&#x2F;lvgl_gui</font><br><img src="/posts/b97be97c/copy_file.png" alt="image-"></p>
</li>
</ul>
<h2 id="LVGL"><a href="#LVGL" class="headerlink" title="LVGL"></a>LVGL</h2><ul>
<li>修改lvgl<br>修改lvgl_conf.h，如下所示，关闭案例编译<br><img src="/posts/b97be97c/lvgl_conf.png" alt="image-"></li>
</ul>
<h2 id="main"><a href="#main" class="headerlink" title="main"></a>main</h2><ul>
<li><p>添加头文件</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui.h&quot;</span></span></span><br></pre></td></tr></table></figure></li>
<li><p>UI初始化<br>删去之前LVGL官方案例的内容，添加如下代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ui_init</span>();</span><br></pre></td></tr></table></figure>
<p><img src="/posts/b97be97c/ui_init.png" alt="image-"></p>
</li>
<li><p>lvgl显示</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">lvgl_task</span><span class="params">(<span class="type">void</span> *pt)</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        lv_timer_handler(); <span class="comment">/* let the GUI do its work */</span></span><br><span class="line"></span><br><span class="line">        vTaskDelay(<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p><code>setup()</code>中创建任务</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">xTaskCreatePinnedToCore(lvgl_task, <span class="string">&quot;lvgl display&quot;</span>, <span class="number">1024</span> * <span class="number">15</span>, <span class="literal">NULL</span>, <span class="number">2</span>, <span class="literal">NULL</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="编译下载"><a href="#编译下载" class="headerlink" title="编译下载"></a>编译下载</h2><p><img src="/posts/b97be97c/S1.png" alt="image-"><br><img src="/posts/b97be97c/S2.jpg" alt="image-"><br><img src="/posts/b97be97c/S3.jpg" alt="image-"></p>
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><center> 2024 <font color="#00bcd9">Levi5</font></center>
]]></content>
      <categories>
        <category>ESP32</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>PlatformIO</tag>
        <tag>lvgl</tag>
        <tag>2.8寸TFT</tag>
        <tag>触摸屏</tag>
        <tag>Squareline Studio</tag>
        <tag>立创</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP32S3N8R8 + lvgl测试官方案例</title>
    <url>/posts/2c4e27ec/</url>
    <content><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a><font style="color: #6e9afc">说明</font></h1><blockquote>
<p>硬件：立创ESP32S3R8N8开发板 + 2.8寸TFT显示屏(ST7789) + 电容触摸(GT911)<br>软件：<font style="color: #36b0f3">Visual Studio Code</font> + <font style="color: #e57200">PlatformIO</font><br>代码：<a href="https://pan.baidu.com/s/1tPKpCQTtXrIsN9fd9mheDQ?pwd=levi">百度网盘：ESP32S3_GT911TOUCH(提取码：levi)</a><br>视频：<a href="https://www.bilibili.com/video/BV1AT421m7Xa">bilibili: 【ESP32】2.8寸电容触摸屏(ST7789+GT911) lvgl 案例测试</a><br>博客：<a href="https://blog.csdn.net/Levi_5/article/details/137572195">CSDN: 【ESP32】立创ESP32S3R8N8开发板+2.8寸TFT电容触摸屏ST7789+GT911+PlatformIO</a></p>
</blockquote>
<h1 id="新建工程"><a href="#新建工程" class="headerlink" title="新建工程"></a><font style="color: #e57200">新建工程</font></h1><ul>
<li><p>点击侧边<code>PlatformIO</code>插件，新建工程<br><img src="/posts/2c4e27ec/open.png"></p>
</li>
<li><p>依次设置工程名，开发板，框架<br><img src="/posts/2c4e27ec/project.png"></p>
</li>
</ul>
<h1 id="屏幕测试"><a href="#屏幕测试" class="headerlink" title="屏幕测试"></a><font style="color: #c16eff">屏幕测试</font></h1><h2 id="添加TFT-eSPI"><a href="#添加TFT-eSPI" class="headerlink" title="添加TFT_eSPI"></a>添加TFT_eSPI</h2><ul>
<li><p>添加屏幕驱动库<code>TFT_eSPI</code>，按如下图顺序<br><img src="/posts/2c4e27ec/TFT_eSPI.png"><br><img src="/posts/2c4e27ec/TFTINSTALL.png"></p>
</li>
<li><p>添加TFT_eSPI到工程<br><img src="/posts/2c4e27ec/ADDTFT.png"></p>
</li>
<li><p>打开配置文件，可以看到已成功添加库<br><img src="/posts/2c4e27ec/TFTINSTALLED.png"></p>
</li>
</ul>
<h2 id="修改TFT-eSPI"><a href="#修改TFT-eSPI" class="headerlink" title="修改TFT_eSPI"></a>修改TFT_eSPI</h2><ul>
<li><p>打开<code>.pio\libdeps\esp32-s3-devkitc-1\TFT_eSPI\User_Setup.h</code>文件<br><img src="/posts/2c4e27ec/opensetup.png"></p>
</li>
<li><p>根据屏幕驱动芯片解注释</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Only define one driver, the other ones must be commented out</span></span><br><span class="line"><span class="comment">// #define ILI9341_DRIVER       // Generic driver for common displays</span></span><br><span class="line"><span class="comment">//#define ILI9341_2_DRIVER     // Alternative ILI9341 driver, see https://github.com/Bodmer/TFT_eSPI/issues/1172</span></span><br><span class="line"><span class="comment">//#define ST7735_DRIVER      // Define additional parameters below for this display</span></span><br><span class="line"><span class="comment">//#define ILI9163_DRIVER     // Define additional parameters below for this display</span></span><br><span class="line"><span class="comment">//#define S6D02A1_DRIVER</span></span><br><span class="line"><span class="comment">//#define RPI_ILI9486_DRIVER // 20MHz maximum SPI</span></span><br><span class="line"><span class="comment">//#define HX8357D_DRIVER</span></span><br><span class="line"><span class="comment">//#define ILI9481_DRIVER</span></span><br><span class="line"><span class="comment">//#define ILI9486_DRIVER</span></span><br><span class="line"><span class="comment">//#define ILI9488_DRIVER     // WARNING: Do not connect ILI9488 display SDO to MISO if other devices share the SPI bus (TFT SDO does NOT tristate when CS is high)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ST7789_DRIVER      <span class="comment">// Full configuration option, define additional parameters below for this display</span></span></span><br><span class="line"><span class="comment">//#define ST7789_2_DRIVER    // Minimal configuration option, define additional parameters below for this display</span></span><br><span class="line"><span class="comment">//#define R61581_DRIVER</span></span><br><span class="line"><span class="comment">//#define RM68140_DRIVER</span></span><br><span class="line"><span class="comment">//#define ST7796_DRIVER</span></span><br><span class="line"><span class="comment">//#define SSD1351_DRIVER</span></span><br><span class="line"><span class="comment">//#define SSD1963_480_DRIVER</span></span><br><span class="line"><span class="comment">//#define SSD1963_800_DRIVER</span></span><br><span class="line"><span class="comment">//#define SSD1963_800ALT_DRIVER</span></span><br><span class="line"><span class="comment">//#define ILI9225_DRIVER</span></span><br><span class="line"><span class="comment">//#define GC9A01_DRIVER</span></span><br></pre></td></tr></table></figure>

<ul>
<li>根据屏幕大小设置宽高</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// For ST7789, ST7735, ILI9163 and GC9A01 ONLY, define the pixel width and height in portrait orientation</span></span><br><span class="line"><span class="comment">// #define TFT_WIDTH  80</span></span><br><span class="line"><span class="comment">// #define TFT_WIDTH  128</span></span><br><span class="line"><span class="comment">// #define TFT_WIDTH  172 // ST7789 172 x 320</span></span><br><span class="line"><span class="comment">// #define TFT_WIDTH  170 // ST7789 170 x 320</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_WIDTH  240 <span class="comment">// ST7789 240 x 240 and 240 x 320</span></span></span><br><span class="line"><span class="comment">// #define TFT_HEIGHT 160</span></span><br><span class="line"><span class="comment">// #define TFT_HEIGHT 128</span></span><br><span class="line"><span class="comment">// #define TFT_HEIGHT 240 // ST7789 240 x 240</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_HEIGHT 320 <span class="comment">// ST7789 240 x 320</span></span></span><br><span class="line"><span class="comment">// #define TFT_HEIGHT 240 // GC9A01 240 x 240</span></span><br></pre></td></tr></table></figure>

<ul>
<li>根据连线设置引脚</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ### EDIT THE PIN NUMBERS IN THE LINES FOLLOWING TO SUIT YOUR ESP32 SETUP   ###</span></span><br><span class="line"><span class="comment">// For ESP32 Dev board (only tested with ILI9341 display)</span></span><br><span class="line"><span class="comment">// The hardware SPI can be mapped to any pins</span></span><br><span class="line"><span class="comment">//#define TFT_MISO 19</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_MOSI 17</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_SCLK 18</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_CS   15  <span class="comment">// Chip select control pin</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_DC    16  <span class="comment">// Data Command control pin</span></span></span><br><span class="line"><span class="comment">//#define TFT_RST   4  // Reset pin (could connect to RST pin)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_RST  -1  <span class="comment">// Set TFT_RST to -1 if display RESET is connected to ESP32 board RST</span></span></span><br></pre></td></tr></table></figure>

<h2 id="修改main-cpp"><a href="#修改main-cpp" class="headerlink" title="修改main.cpp"></a>修改main.cpp</h2><p>在屏幕上从上到下分别显示<font style="color: #ff0000">红</font><font style="color: #00ff00">绿</font><font style="color: #0000ff">蓝</font>三色，以及<font style="background: #8c8c8c;color: #ffffff">白色</font>文字，用来测试屏幕颜色显示是否正常。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TFT_eSPI.h&gt;</span> <span class="comment">// Hardware-specific library</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_GREY 0x5AEB</span></span><br><span class="line">TFT_eSPI tft = <span class="built_in">TFT_eSPI</span>();       <span class="comment">// Invoke custom library</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  tft.<span class="built_in">init</span>();</span><br><span class="line">  tft.<span class="built_in">setRotation</span>(<span class="number">0</span>);</span><br><span class="line">  tft.<span class="built_in">fillScreen</span>(TFT_GREY);</span><br><span class="line">  tft.<span class="built_in">setTextColor</span>(TFT_WHITE, TFT_GREY);  <span class="comment">// Adding a background colour erases previous text automatically</span></span><br><span class="line">  tft.<span class="built_in">fillRect</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">240</span>,<span class="number">50</span>,TFT_RED);</span><br><span class="line">  tft.<span class="built_in">fillRect</span>(<span class="number">0</span>,<span class="number">50</span>,<span class="number">240</span>,<span class="number">50</span>,TFT_GREEN);</span><br><span class="line">  tft.<span class="built_in">fillRect</span>(<span class="number">0</span>,<span class="number">100</span>,<span class="number">240</span>,<span class="number">50</span>,TFT_BLUE);</span><br><span class="line">  tft.<span class="built_in">drawCentreString</span>(<span class="string">&quot;Time flies&quot;</span>,<span class="number">120</span>,<span class="number">260</span>,<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// put your main code here, to run repeatedly:</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="下载调试"><a href="#下载调试" class="headerlink" title="下载调试"></a>下载调试</h2><ul>
<li><p>编译下载<br><img src="/posts/2c4e27ec/load.png"></p>
</li>
<li><p>根据屏幕显示情况修改<code>User_Setup.h</code>文件</p>
</li>
</ul>
<p>如果颜色反转(白色显示为黑色)，如下图所示，则取消下一个注释，尝试两个选项，其中一个选项应该纠正反转。<br><img src="/posts/2c4e27ec/image-20240410132437581.png"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// If colours are inverted (white shows as black) then uncomment one of the next</span></span><br><span class="line"><span class="comment">// 2 lines try both options, one of the options should correct the inversion.</span></span><br><span class="line"><span class="comment">// #define TFT_INVERSION_ON</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TFT_INVERSION_OFF</span></span><br></pre></td></tr></table></figure>
<p>修改后，如下图所示，白色正常显示，但是RGB顺序存在问题<br><img src="/posts/2c4e27ec/image-20240410132701414.png"></p>
<p>仅对于ST7735, ST7789和ILI9341，如果显示器上的蓝色和红色交换，则定义颜色顺序，一次尝试一个选项来找到显示的正确颜色顺序</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// For ST7735, ST7789 and ILI9341 ONLY, define the colour order IF the blue and red are swapped on your display</span></span><br><span class="line"><span class="comment">// Try ONE option at a time to find the correct colour order for your display</span></span><br><span class="line"><span class="comment">//  #define TFT_RGB_ORDER TFT_RGB  // Colour order Red-Green-Blue</span></span><br><span class="line"> <span class="meta">#<span class="keyword">define</span> TFT_RGB_ORDER TFT_BGR  <span class="comment">// Colour order Blue-Green-Red</span></span></span><br></pre></td></tr></table></figure>
<p>修改后，如下图所示，RGB顺序正常<br><img src="/posts/2c4e27ec/image-20240410132744241.png"></p>
<h1 id="LVGL测试"><a href="#LVGL测试" class="headerlink" title="LVGL测试"></a><font style="color: #6c9ba6">LVGL测试</font></h1><h2 id="添加LVGL"><a href="#添加LVGL" class="headerlink" title="添加LVGL"></a>添加LVGL</h2><ul>
<li><p>根据实际情况，选择lvgl版本<br><img src="/posts/2c4e27ec/lvgl.png"><br>![](lvglinstall.png” style&#x3D;”zoom:67%;” &gt;</p>
</li>
<li><p>添加lvgl到工程<br>![](lvglinstalled.png” style&#x3D;”zoom:67%;” &gt;</p>
</li>
</ul>
<h2 id="修改LVGL"><a href="#修改LVGL" class="headerlink" title="修改LVGL"></a>修改LVGL</h2><ul>
<li><p>打开<code>.pio\libdeps\esp32-s3-devkitc-1\lvgl\lv_conf_template.h</code>文件</p>
<p>将此文件重命名为<code>lv_conf.h</code></p>
</li>
</ul>
<p>![](lvconf.png” style&#x3D;”zoom:67%;” &gt;</p>
<ul>
<li>使能lvgl</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* clang-format off */</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 1 <span class="comment">/*Set it to &quot;1&quot; to enable content*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> LV_CONF_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LV_CONF_H</span></span><br></pre></td></tr></table></figure>

<ul>
<li>设置周期</li>
</ul>
<p>默认显示刷新周期。LVG将重新绘制改变的区域与这个周期时间<br>输入设备读取周期毫秒</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*Default display refresh period. LVG will redraw changed areas with this period time*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LV_DISP_DEF_REFR_PERIOD 1      <span class="comment">/*[ms]*/</span></span></span><br><span class="line"><span class="comment">/*Input device read period in milliseconds*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LV_INDEV_DEF_READ_PERIOD 1     <span class="comment">/*[ms]*/</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>心跳使能</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*Use a custom tick source that tells the elapsed time in milliseconds.</span></span><br><span class="line"><span class="comment"> *It removes the need to manually update the tick with `lv_tick_inc()`)*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LV_TICK_CUSTOM 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> LV_TICK_CUSTOM</span></span><br></pre></td></tr></table></figure>

<ul>
<li>使能测试案例</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*Show some widget. It might be required to increase `LV_MEM_SIZE` */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LV_USE_DEMO_WIDGETS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> LV_USE_DEMO_WIDGETS</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LV_DEMO_WIDGETS_SLIDESHOW 0</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li><p>更改文件路径</p>
<p>将<code>.pio\libdeps\esp32-s3-devkitc-1\lvgl\demos</code>文件夹移动至<code>.pio\libdeps\esp32-s3-devkitc-1\lvgl\src\demos</code></p>
</li>
<li><p>修改main.cpp</p>
<p>将<code>.pio\libdeps\esp32-s3-devkitc-1\lvgl\examples\arduino\LVGL_Arduino\LVGL_Arduino.ino</code>文件内容复制</p>
<ul>
<li>设置头文件</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lvgl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TFT_eSPI.h&gt;</span> <span class="comment">// Hardware-specific library</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;demos/lv_demos.h&quot;</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li>设置宽高</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint16_t</span> screenWidth  = <span class="number">320</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint16_t</span> screenHeight = <span class="number">240</span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>修改类型</li>
</ul>
<p><code>lv_disp_t</code>修改为<code>lv_disp_drv_t</code></p>
<p><code>lv_indev_t</code>修改为<code>lv_indev_drv_t</code></p>
<ul>
<li>注释掉触摸部分</li>
</ul>
</li>
</ul>
<h2 id="修改完成"><a href="#修改完成" class="headerlink" title="修改完成"></a>修改完成</h2><p>最终<code>main.cpp</code>文件内容如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lvgl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TFT_eSPI.h&gt;</span> <span class="comment">// Hardware-specific library</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;demos/lv_demos.h&quot;</span></span></span><br><span class="line"><span class="comment">/*Change to your screen resolution*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint16_t</span> screenWidth  = <span class="number">320</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint16_t</span> screenHeight = <span class="number">240</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">lv_disp_draw_buf_t</span> draw_buf;</span><br><span class="line"><span class="type">static</span> <span class="type">lv_color_t</span> buf[ screenWidth * <span class="number">10</span> ];</span><br><span class="line">TFT_eSPI tft = <span class="built_in">TFT_eSPI</span>(screenWidth, screenHeight); <span class="comment">/* TFT instance */</span></span><br><span class="line"><span class="comment">/* Display flushing */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">my_disp_flush</span><span class="params">( <span class="type">lv_disp_drv_t</span> *disp, <span class="type">const</span> <span class="type">lv_area_t</span> *area, <span class="type">lv_color_t</span> *color_p )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">uint32_t</span> w = ( area-&gt;x2 - area-&gt;x1 + <span class="number">1</span> );</span><br><span class="line">    <span class="type">uint32_t</span> h = ( area-&gt;y2 - area-&gt;y1 + <span class="number">1</span> );</span><br><span class="line">    tft.<span class="built_in">startWrite</span>();</span><br><span class="line">    tft.<span class="built_in">setAddrWindow</span>( area-&gt;x1, area-&gt;y1, w, h );</span><br><span class="line">    tft.<span class="built_in">pushColors</span>( ( <span class="type">uint16_t</span> * )&amp;color_p-&gt;full, w * h, <span class="literal">true</span> );</span><br><span class="line">    tft.<span class="built_in">endWrite</span>();</span><br><span class="line">    <span class="built_in">lv_disp_flush_ready</span>( disp );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Read the touchpad*/</span></span><br><span class="line"><span class="comment">// void my_touchpad_read( lv_indev_drv_t * indev_driver, lv_indev_data_t * data )</span></span><br><span class="line"><span class="comment">// &#123;</span></span><br><span class="line"><span class="comment">//     uint16_t touchX, touchY;</span></span><br><span class="line"><span class="comment">//     bool touched = tft.getTouch( &amp;touchX, &amp;touchY, 600 );</span></span><br><span class="line"><span class="comment">//     if( !touched )</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         data-&gt;state = LV_INDEV_STATE_REL;</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">//     else</span></span><br><span class="line"><span class="comment">//     &#123;</span></span><br><span class="line"><span class="comment">//         data-&gt;state = LV_INDEV_STATE_PR;</span></span><br><span class="line"><span class="comment">//         /*Set the coordinates*/</span></span><br><span class="line"><span class="comment">//         data-&gt;point.x = touchX;</span></span><br><span class="line"><span class="comment">//         data-&gt;point.y = touchY;</span></span><br><span class="line"><span class="comment">//         Serial.print( &quot;Data x &quot; );</span></span><br><span class="line"><span class="comment">//         Serial.println( touchX );</span></span><br><span class="line"><span class="comment">//         Serial.print( &quot;Data y &quot; );</span></span><br><span class="line"><span class="comment">//         Serial.println( touchY );</span></span><br><span class="line"><span class="comment">//     &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial.<span class="built_in">begin</span>( <span class="number">115200</span> ); <span class="comment">/* prepare for possible serial debug */</span></span><br><span class="line">    String LVGL_Arduino = <span class="string">&quot;Hello Arduino! &quot;</span>;</span><br><span class="line">    LVGL_Arduino += <span class="built_in">String</span>(<span class="string">&#x27;V&#x27;</span>) + <span class="built_in">lv_version_major</span>() + <span class="string">&quot;.&quot;</span> + <span class="built_in">lv_version_minor</span>() + <span class="string">&quot;.&quot;</span> + <span class="built_in">lv_version_patch</span>();</span><br><span class="line">    Serial.<span class="built_in">println</span>( LVGL_Arduino );</span><br><span class="line">    Serial.<span class="built_in">println</span>( <span class="string">&quot;I am LVGL_Arduino&quot;</span> );</span><br><span class="line">    <span class="built_in">lv_init</span>();</span><br><span class="line">    tft.<span class="built_in">begin</span>();          <span class="comment">/* TFT init */</span></span><br><span class="line">    tft.<span class="built_in">setRotation</span>( <span class="number">3</span> ); <span class="comment">/* Landscape orientation, flipped */</span></span><br><span class="line">    <span class="comment">/*Set the touchscreen calibration data,</span></span><br><span class="line"><span class="comment">     the actual data for your display can be acquired using</span></span><br><span class="line"><span class="comment">     the Generic -&gt; Touch_calibrate example from the TFT_eSPI library*/</span></span><br><span class="line">    <span class="type">uint16_t</span> calData[<span class="number">5</span>] = &#123; <span class="number">275</span>, <span class="number">3620</span>, <span class="number">264</span>, <span class="number">3532</span>, <span class="number">1</span> &#125;;</span><br><span class="line">    <span class="comment">// tft.setTouch( calData );</span></span><br><span class="line">    <span class="built_in">lv_disp_draw_buf_init</span>( &amp;draw_buf, buf, <span class="literal">NULL</span>, screenWidth * <span class="number">10</span> );</span><br><span class="line">    <span class="comment">/*Initialize the display*/</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_disp_drv_t</span> disp_drv;</span><br><span class="line">    <span class="built_in">lv_disp_drv_init</span>( &amp;disp_drv );</span><br><span class="line">    <span class="comment">/*Change the following line to your display resolution*/</span></span><br><span class="line">    disp_drv.hor_res = screenWidth;</span><br><span class="line">    disp_drv.ver_res = screenHeight;</span><br><span class="line">    disp_drv.flush_cb = my_disp_flush;</span><br><span class="line">    disp_drv.draw_buf = &amp;draw_buf;</span><br><span class="line">    <span class="built_in">lv_disp_drv_register</span>( &amp;disp_drv );</span><br><span class="line">    <span class="comment">/*Initialize the (dummy) input device driver*/</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_indev_drv_t</span> indev_drv;</span><br><span class="line">    <span class="built_in">lv_indev_drv_init</span>( &amp;indev_drv );</span><br><span class="line">    indev_drv.type = LV_INDEV_TYPE_POINTER;</span><br><span class="line">    <span class="comment">// indev_drv.read_cb = my_touchpad_read;</span></span><br><span class="line">    <span class="built_in">lv_indev_drv_register</span>( &amp;indev_drv );</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 0</span></span><br><span class="line">    <span class="comment">/* Create simple label */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *label = <span class="built_in">lv_label_create</span>( <span class="built_in">lv_scr_act</span>() );</span><br><span class="line">    <span class="built_in">lv_label_set_text</span>( label, LVGL_Arduino.<span class="built_in">c_str</span>() );</span><br><span class="line">    <span class="built_in">lv_obj_align</span>( label, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span> );</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    <span class="built_in">lv_demo_widgets</span>();            <span class="comment">// OK</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    Serial.<span class="built_in">println</span>( <span class="string">&quot;Setup done&quot;</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">lv_timer_handler</span>(); <span class="comment">/* let the GUI do its work */</span></span><br><span class="line">    <span class="built_in">delay</span>( <span class="number">5</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="编译下载"><a href="#编译下载" class="headerlink" title="编译下载"></a>编译下载</h2><p>显示效果如下图<br><img src="/posts/2c4e27ec/image-20240410134038409.png"></p>
<h1 id="触摸测试"><a href="#触摸测试" class="headerlink" title="触摸测试"></a><font style="color: #26c492">触摸测试</font></h1><h2 id="添加bb-captouch"><a href="#添加bb-captouch" class="headerlink" title="添加bb_captouch"></a>添加<code>bb_captouch</code></h2><p><img src="/posts/2c4e27ec/bb_captouch.png"></p>
<h2 id="修改main-cpp-1"><a href="#修改main-cpp-1" class="headerlink" title="修改main.cpp"></a>修改<code>main.cpp</code></h2><ul>
<li><p>添加头文件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bb_captouch.h&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>设置触摸芯片引脚</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// These defines are for a low cost ESP32 LCD board with the GT911 touch controller</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_SDA  4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_SCL  2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_INT 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_RST 1</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>设置参数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">BBCapTouch bbct;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *szNames[] = &#123;<span class="string">&quot;Unknown&quot;</span>, <span class="string">&quot;FT6x36&quot;</span>, <span class="string">&quot;GT911&quot;</span>, <span class="string">&quot;CST820&quot;</span>&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">bbct.<span class="built_in">init</span>(TOUCH_SDA, TOUCH_SCL, TOUCH_RST, TOUCH_INT);</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改<code>my_touchpad_read</code>函数</p>
<p>这里的x,y坐标需要根据实际情况修改</p>
<p><img src="/posts/2c4e27ec/pos.png"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*Read the touchpad*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">my_touchpad_read</span><span class="params">( <span class="type">lv_indev_drv_t</span> * indev_driver, <span class="type">lv_indev_data_t</span> * data )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TOUCHINFO ti;</span><br><span class="line">    <span class="keyword">if</span>(bbct.<span class="built_in">getSamples</span>(&amp;ti))</span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line">        <span class="comment">/*Set the coordinates*/</span></span><br><span class="line">        data-&gt;point.x = screenWidth - ti.y[<span class="number">0</span>];</span><br><span class="line">        data-&gt;point.y = ti.x[<span class="number">0</span>];</span><br><span class="line">        Serial.<span class="built_in">print</span>( <span class="string">&quot;Data x &quot;</span> );</span><br><span class="line">        Serial.<span class="built_in">println</span>( screenWidth - ti.y[<span class="number">0</span>] );</span><br><span class="line">        Serial.<span class="built_in">print</span>( <span class="string">&quot;Data y &quot;</span> );</span><br><span class="line">        Serial.<span class="built_in">println</span>( ti.x[<span class="number">0</span>] );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="修改完成-1"><a href="#修改完成-1" class="headerlink" title="修改完成"></a>修改完成</h2><p>最终<code>main.cpp</code>文件内容如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SPI.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;lvgl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;TFT_eSPI.h&gt;</span> <span class="comment">// Hardware-specific library</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;demos/lv_demos.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bb_captouch.h&gt;</span></span></span><br><span class="line"><span class="comment">// These defines are for a low cost ESP32 LCD board with the GT911 touch controller</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_SDA  4</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_SCL  2</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_INT 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TOUCH_RST 1</span></span><br><span class="line">BBCapTouch bbct;</span><br><span class="line"><span class="type">const</span> <span class="type">char</span> *szNames[] = &#123;<span class="string">&quot;Unknown&quot;</span>, <span class="string">&quot;FT6x36&quot;</span>, <span class="string">&quot;GT911&quot;</span>, <span class="string">&quot;CST820&quot;</span>&#125;;</span><br><span class="line"><span class="comment">/*Change to your screen resolution*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint16_t</span> screenWidth  = <span class="number">320</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="type">uint16_t</span> screenHeight = <span class="number">240</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">lv_disp_draw_buf_t</span> draw_buf;</span><br><span class="line"><span class="type">static</span> <span class="type">lv_color_t</span> buf[ screenWidth * <span class="number">10</span> ];</span><br><span class="line">TFT_eSPI tft = <span class="built_in">TFT_eSPI</span>(screenWidth, screenHeight); <span class="comment">/* TFT instance */</span></span><br><span class="line"><span class="comment">/* Display flushing */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">my_disp_flush</span><span class="params">( <span class="type">lv_disp_drv_t</span> *disp, <span class="type">const</span> <span class="type">lv_area_t</span> *area, <span class="type">lv_color_t</span> *color_p )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">uint32_t</span> w = ( area-&gt;x2 - area-&gt;x1 + <span class="number">1</span> );</span><br><span class="line">    <span class="type">uint32_t</span> h = ( area-&gt;y2 - area-&gt;y1 + <span class="number">1</span> );</span><br><span class="line">    tft.<span class="built_in">startWrite</span>();</span><br><span class="line">    tft.<span class="built_in">setAddrWindow</span>( area-&gt;x1, area-&gt;y1, w, h );</span><br><span class="line">    tft.<span class="built_in">pushColors</span>( ( <span class="type">uint16_t</span> * )&amp;color_p-&gt;full, w * h, <span class="literal">true</span> );</span><br><span class="line">    tft.<span class="built_in">endWrite</span>();</span><br><span class="line">    <span class="built_in">lv_disp_flush_ready</span>( disp );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Read the touchpad*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">my_touchpad_read</span><span class="params">( <span class="type">lv_indev_drv_t</span> * indev_driver, <span class="type">lv_indev_data_t</span> * data )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// uint16_t touchX, touchY;</span></span><br><span class="line">    TOUCHINFO ti;</span><br><span class="line">    <span class="keyword">if</span>(bbct.<span class="built_in">getSamples</span>(&amp;ti))</span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line">        <span class="comment">/*Set the coordinates*/</span></span><br><span class="line">        data-&gt;point.x = screenWidth - ti.y[<span class="number">0</span>];</span><br><span class="line">        data-&gt;point.y = ti.x[<span class="number">0</span>];</span><br><span class="line">        Serial.<span class="built_in">print</span>( <span class="string">&quot;Data x &quot;</span> );</span><br><span class="line">        Serial.<span class="built_in">println</span>( screenWidth - ti.y[<span class="number">0</span>] );</span><br><span class="line">        Serial.<span class="built_in">print</span>( <span class="string">&quot;Data y &quot;</span> );</span><br><span class="line">        Serial.<span class="built_in">println</span>( ti.x[<span class="number">0</span>] );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Serial.<span class="built_in">begin</span>( <span class="number">115200</span> ); <span class="comment">/* prepare for possible serial debug */</span></span><br><span class="line">    String LVGL_Arduino = <span class="string">&quot;Hello Arduino! &quot;</span>;</span><br><span class="line">    LVGL_Arduino += <span class="built_in">String</span>(<span class="string">&#x27;V&#x27;</span>) + <span class="built_in">lv_version_major</span>() + <span class="string">&quot;.&quot;</span> + <span class="built_in">lv_version_minor</span>() + <span class="string">&quot;.&quot;</span> + <span class="built_in">lv_version_patch</span>();</span><br><span class="line">    Serial.<span class="built_in">println</span>( LVGL_Arduino );</span><br><span class="line">    Serial.<span class="built_in">println</span>( <span class="string">&quot;I am LVGL_Arduino&quot;</span> );</span><br><span class="line">    <span class="built_in">lv_init</span>();</span><br><span class="line">    tft.<span class="built_in">begin</span>();          <span class="comment">/* TFT init */</span></span><br><span class="line">    tft.<span class="built_in">setRotation</span>( <span class="number">3</span> ); <span class="comment">/* Landscape orientation, flipped */</span></span><br><span class="line">    bbct.<span class="built_in">init</span>(TOUCH_SDA, TOUCH_SCL, TOUCH_RST, TOUCH_INT);</span><br><span class="line">    <span class="type">int</span> iType = bbct.<span class="built_in">sensorType</span>();</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;Sensor type = %s\n&quot;</span>, szNames[iType]);</span><br><span class="line">    <span class="built_in">lv_disp_draw_buf_init</span>( &amp;draw_buf, buf, <span class="literal">NULL</span>, screenWidth * <span class="number">10</span> );</span><br><span class="line">    <span class="comment">/*Initialize the display*/</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_disp_drv_t</span> disp_drv;</span><br><span class="line">    <span class="built_in">lv_disp_drv_init</span>( &amp;disp_drv );</span><br><span class="line">    <span class="comment">/*Change the following line to your display resolution*/</span></span><br><span class="line">    disp_drv.hor_res = screenWidth;</span><br><span class="line">    disp_drv.ver_res = screenHeight;</span><br><span class="line">    disp_drv.flush_cb = my_disp_flush;</span><br><span class="line">    disp_drv.draw_buf = &amp;draw_buf;</span><br><span class="line">    <span class="built_in">lv_disp_drv_register</span>( &amp;disp_drv );</span><br><span class="line">    <span class="comment">/*Initialize the (dummy) input device driver*/</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_indev_drv_t</span> indev_drv;</span><br><span class="line">    <span class="built_in">lv_indev_drv_init</span>( &amp;indev_drv );</span><br><span class="line">    indev_drv.type = LV_INDEV_TYPE_POINTER;</span><br><span class="line">    indev_drv.read_cb = my_touchpad_read;</span><br><span class="line">    <span class="built_in">lv_indev_drv_register</span>( &amp;indev_drv );</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> 0</span></span><br><span class="line">    <span class="comment">/* Create simple label */</span></span><br><span class="line">    <span class="type">lv_obj_t</span> *label = <span class="built_in">lv_label_create</span>( <span class="built_in">lv_scr_act</span>() );</span><br><span class="line">    <span class="built_in">lv_label_set_text</span>( label, LVGL_Arduino.<span class="built_in">c_str</span>() );</span><br><span class="line">    <span class="built_in">lv_obj_align</span>( label, LV_ALIGN_CENTER, <span class="number">0</span>, <span class="number">0</span> );</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    <span class="comment">// uncomment one of these demos</span></span><br><span class="line">    <span class="built_in">lv_demo_widgets</span>();            <span class="comment">// OK</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    Serial.<span class="built_in">println</span>( <span class="string">&quot;Setup done&quot;</span> );</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">lv_timer_handler</span>(); <span class="comment">/* let the GUI do its work */</span></span><br><span class="line">    <span class="built_in">delay</span>( <span class="number">5</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="编译下载-1"><a href="#编译下载-1" class="headerlink" title="编译下载"></a>编译下载</h2><p>触摸显示效果如下图所示<br><img src="/posts/2c4e27ec/image-20240410134339063.png"></p>
<h1 id="END"><a href="#END" class="headerlink" title="END"></a>END</h1><center> 2024 <font color="#00bcd9">Levi5</font></center>
]]></content>
      <categories>
        <category>ESP32</category>
        <category>教程</category>
      </categories>
      <tags>
        <tag>ESP32</tag>
        <tag>PlatformIO</tag>
        <tag>lvgl</tag>
        <tag>2.8寸TFT</tag>
        <tag>触摸屏</tag>
        <tag>立创</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/4a17b156/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
